/**
 * Copyright (c) {2003,2011} {openmobster@gmail.com} {individual contributors as indicated by the @authors tag}.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */

package org.openmobster.core.common.bus;

import java.io.Serializable;

import org.hornetq.core.client.ClientMessage;

import org.openmobster.core.common.InVMAttributeManager;

/**
 * Carries information about Update Events generated by the Channel Daemons
 * 
 * @author openmobster@gmail.com
 */
public final class BusMessage implements Serializable 
{	
	private static final long serialVersionUID = -2182624463957145277L;
	
	private InVMAttributeManager attributes;
	
	public BusMessage()
	{
		this.attributes = new InVMAttributeManager();
	}
	
	public Object getAttribute(String name)
	{
		return this.attributes.getAttribute(name);
	}
	
	public void setAttribute(String name, Object value)
	{
		this.attributes.setAttribute(name, value);
	}
	
	public void removeAttribute(String name)
	{
		this.attributes.removeAttribute(name);
	}
	//-----------------------------------------------------------------------------------------------------------
	public String getBusUri()
	{
		return (String)this.attributes.getAttribute("uri");
	}
	
	public void setBusUri(String uri)
	{
		this.attributes.setAttribute("uri", uri);
	}
	
	public String getSenderUri()
	{
		return (String)this.attributes.getAttribute("sender-uri");
	}
	
	public void setSenderUri(String senderUri)
	{
		this.attributes.setAttribute("sender-uri", senderUri);
	}
	//------------------------------------------------------------------------------------------------------------
	public void acknowledge()
	{
		try
		{
			ClientMessage hornetqMessage = (ClientMessage)this.getAttribute("hornetq-message");
			if(hornetqMessage != null)
			{
				hornetqMessage.acknowledge();
			}
		}
		catch(Throwable t)
		{
			throw new RuntimeException(t);
		}
	}
}
